{"version":3,"sources":["logo.svg","component/UI/Menu.js","component/UI/Header.js","component/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SwipeableTemporaryDrawer","side","React","useState","top","left","bottom","right","state","setState","toggleDrawer","open","event","type","key","size","onClick","style","marginLeft","cursor","SwipeableDrawer","anchor","onClose","onOpen","width","role","onKeyDown","List","ListItem","ListItemIcon","ListItemText","primary","button","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","header","Header","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","Main","props","this","Grid","container","item","xs","justify","name","image","description","map","value","gridStyle","Card","card","CardActionArea","CardMedia","component","alt","CardContent","gutterBottom","CardActions","Button","Component","withStyles","paddingTop","maxWidth","media","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4c063708.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from \"react-router-dom\";\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { IoMdMenu } from \"react-icons/io\";\r\n\r\nimport { FaGreaterThan,FaAngleRight,FaAngleDown,FaHome,FaTable } from \"react-icons/fa\";\r\n\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = side => (\r\n    <div\r\n    style = {{width:\"250\"}}\r\n      // className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>   \r\n          <ListItem  key='management_table'>\r\n            <ListItemIcon> <FaTable size={24} /> </ListItemIcon>\r\n            <ListItemText primary=\"Menu\" />\r\n          </ListItem>\r\n          \r\n        <ListItem button key='address_translation'>\r\n                <ListItemIcon> <InboxIcon /> </ListItemIcon>\r\n                <ListItemText primary=\"Shopping Cart\" />\r\n            </ListItem>\r\n     \r\n\r\n          <ListItem button key='home'>\r\n                <ListItemIcon> <FaHome size={24} /> </ListItemIcon>\r\n                <ListItemText primary=\"Profile\" />\r\n            </ListItem>\r\n      </List>\r\n      \r\n    </div>\r\n  );\r\n\r\n  \r\n  return (\r\n    <>\r\n     \r\n      <IoMdMenu size={28} onClick={toggleDrawer('left', true)} style={{marginLeft:\"8px\",cursor:\"pointer\"}}/>\r\n      <SwipeableDrawer\r\n        anchor=\"left\"\r\n        open={state.left}\r\n        onClose={toggleDrawer('left', false)}\r\n        onOpen={toggleDrawer('left', true)}\r\n      >\r\n        {sideList('left')}\r\n      </SwipeableDrawer>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport SwipeableTemporaryDrawer from \"./Menu\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n  header:{\r\n    backgroundColor:\"#0b0b0b\"\r\n  }\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.header}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            {/* <MenuIcon /> */}\r\n            <SwipeableTemporaryDrawer />\r\n\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Restaurant\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport Drawer from 'react-motion-drawer';\n\nimport SwipeableTemporaryDrawer from \"./UI/Menu\";\nimport Header from \"./UI/Header\";\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render(){\n    const {classes} = this.props;\n    const menu = [ {name:\"BreakFast\",image:\"image1.jpg\",description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"},\n                   {name:\"Dinner\",image:\"image4.jpg\",description:\" Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\"},\n                   {name:\"Lunch\",image:\"image3.jpg\",description:\"when an unknown printer took a galley of type and scrambled it to make a type specimen book\"},\n                   {name:\"Pie\",image:\"image2.jpg\",description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"}];\n  return (\n    <div >\n      <Header />\n      \n    <Grid container className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={3}>\n          {menu.map(value => (\n            <Grid key={value} item className={classes.gridStyle}>\n              <Card className={classes.card}>\n                  <CardActionArea>\n                    <CardMedia\n                        component=\"img\"\n                        alt=\"Contemplative Reptile\"\n                        height=\"160\"\n                        image={value.image}\n                        title=\"Contemplative Reptile\"\n                      />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {value.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                      {value.description}\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                    <CardActions>\n                      <Button size=\"small\" color=\"primary\">\n                        Share\n                      </Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Learn More\n                      </Button>\n                    </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    \n    </Grid>\n    </div>\n  )}\n}\nconst styles  = theme => ({\n  root :{paddingTop:20},\n  card: {\n    maxWidth: 500\n  },\n  media: {\n    height: 140,\n  },\n  gridStyle:{\n    width:500\n  }\n});\nexport default withStyles(styles)(Main);\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from \"./component/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();npm run build && npm run start-sw\nserviceWorker.register();"],"sourceRoot":""}